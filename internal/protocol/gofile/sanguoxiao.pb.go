// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: sanguoxiao.proto

package pb

import (
// 	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
// const _ = proto.ProtoPackageIsVersion4

//次序说明(流程):
//1、个人信息登录
//2、招募武将
//3、选择武将
//4、匹配挑战对手
//5、生命值小的一方优先消除,相同则随机一方开始
//6、开始消除属性触发技能
//7、15秒轮流消除
//8、一方总生命值归零则游戏结束
//9、游戏结束,分配奖励
//10、退出游戏
//游戏类型
type SgxHeroType int32

const (
	SgxHeroType_HeroNull SgxHeroType = 0
	SgxHeroType_JIN      SgxHeroType = 1 //金
	SgxHeroType_MU       SgxHeroType = 2 //木
	SgxHeroType_SHUI     SgxHeroType = 3 //水
	SgxHeroType_HUO      SgxHeroType = 4 //火
	SgxHeroType_TU       SgxHeroType = 5 //土
)

// Enum value maps for SgxHeroType.
var (
	SgxHeroType_name = map[int32]string{
		0: "HeroNull",
		1: "JIN",
		2: "MU",
		3: "SHUI",
		4: "HUO",
		5: "TU",
	}
	SgxHeroType_value = map[string]int32{
		"HeroNull": 0,
		"JIN":      1,
		"MU":       2,
		"SHUI":     3,
		"HUO":      4,
		"TU":       5,
	}
)

func (x SgxHeroType) Enum() *SgxHeroType {
	p := new(SgxHeroType)
	*p = x
	return p
}

func (x SgxHeroType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SgxHeroType) Descriptor() protoreflect.EnumDescriptor {
	return file_sanguoxiao_proto_enumTypes[0].Descriptor()
}

func (SgxHeroType) Type() protoreflect.EnumType {
	return &file_sanguoxiao_proto_enumTypes[0]
}

func (x SgxHeroType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SgxHeroType.Descriptor instead.
func (SgxHeroType) EnumDescriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{0}
}

type SgxPiece int32

const (
	SgxPiece_NoSGXPiece SgxPiece = 0
	SgxPiece_Jin        SgxPiece = 1 // 金
	SgxPiece_Mu         SgxPiece = 2 // 木
	SgxPiece_Shui       SgxPiece = 3 // 水
	SgxPiece_Huo        SgxPiece = 4 // 火
	SgxPiece_Tu         SgxPiece = 5 // 土
	SgxPiece_Yao        SgxPiece = 6 // 药
)

// Enum value maps for SgxPiece.
var (
	SgxPiece_name = map[int32]string{
		0: "NoSGXPiece",
		1: "Jin",
		2: "Mu",
		3: "Shui",
		4: "Huo",
		5: "Tu",
		6: "Yao",
	}
	SgxPiece_value = map[string]int32{
		"NoSGXPiece": 0,
		"Jin":        1,
		"Mu":         2,
		"Shui":       3,
		"Huo":        4,
		"Tu":         5,
		"Yao":        6,
	}
)

func (x SgxPiece) Enum() *SgxPiece {
	p := new(SgxPiece)
	*p = x
	return p
}

func (x SgxPiece) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SgxPiece) Descriptor() protoreflect.EnumDescriptor {
	return file_sanguoxiao_proto_enumTypes[1].Descriptor()
}

func (SgxPiece) Type() protoreflect.EnumType {
	return &file_sanguoxiao_proto_enumTypes[1]
}

func (x SgxPiece) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SgxPiece.Descriptor instead.
func (SgxPiece) EnumDescriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{1}
}

// 格子
type SgxGrid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row  int32    `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`                    // 所在排
	Col  int32    `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`                    // 所在列
	Core SgxPiece `protobuf:"varint,3,opt,name=core,proto3,enum=pb.SgxPiece" json:"core,omitempty"` // 实际子项
}

func (x *SgxGrid) Reset() {
	*x = SgxGrid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SgxGrid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SgxGrid) ProtoMessage() {}

func (x *SgxGrid) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SgxGrid.ProtoReflect.Descriptor instead.
func (*SgxGrid) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{0}
}

func (x *SgxGrid) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *SgxGrid) GetCol() int32 {
	if x != nil {
		return x.Col
	}
	return 0
}

func (x *SgxGrid) GetCore() SgxPiece {
	if x != nil {
		return x.Core
	}
	return SgxPiece_NoSGXPiece
}

// 棋盘
type SgxBoardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cells []*SgxGrid `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"` // 所有格子
}

func (x *SgxBoardInfo) Reset() {
	*x = SgxBoardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SgxBoardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SgxBoardInfo) ProtoMessage() {}

func (x *SgxBoardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SgxBoardInfo.ProtoReflect.Descriptor instead.
func (*SgxBoardInfo) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{1}
}

func (x *SgxBoardInfo) GetCells() []*SgxGrid {
	if x != nil {
		return x.Cells
	}
	return nil
}

// 三国消玩家信息
type SanguoxiaoPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info      *PlayerInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`           // 个人信息
	ArenaTeam []*HeroInfo `protobuf:"bytes,2,rep,name=arenaTeam,proto3" json:"arenaTeam,omitempty"` // 出场武将
	Health    int64       `protobuf:"varint,3,opt,name=health,proto3" json:"health,omitempty"`      // 生命值
}

func (x *SanguoxiaoPlayer) Reset() {
	*x = SanguoxiaoPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoPlayer) ProtoMessage() {}

func (x *SanguoxiaoPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoPlayer.ProtoReflect.Descriptor instead.
func (*SanguoxiaoPlayer) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{2}
}

func (x *SanguoxiaoPlayer) GetInfo() *PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SanguoxiaoPlayer) GetArenaTeam() []*HeroInfo {
	if x != nil {
		return x.ArenaTeam
	}
	return nil
}

func (x *SanguoxiaoPlayer) GetHealth() int64 {
	if x != nil {
		return x.Health
	}
	return 0
}

// 攻击
type SanguoxiaoAttack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId  int64 `protobuf:"varint,1,opt,name=heroId,proto3" json:"heroId,omitempty"`   // 武将ID
	Damage  int64 `protobuf:"varint,2,opt,name=damage,proto3" json:"damage,omitempty"`   // 攻击造成的伤害值
	Therapy int64 `protobuf:"varint,3,opt,name=therapy,proto3" json:"therapy,omitempty"` // 治疗
}

func (x *SanguoxiaoAttack) Reset() {
	*x = SanguoxiaoAttack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoAttack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoAttack) ProtoMessage() {}

func (x *SanguoxiaoAttack) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoAttack.ProtoReflect.Descriptor instead.
func (*SanguoxiaoAttack) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{3}
}

func (x *SanguoxiaoAttack) GetHeroId() int64 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *SanguoxiaoAttack) GetDamage() int64 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *SanguoxiaoAttack) GetTherapy() int64 {
	if x != nil {
		return x.Therapy
	}
	return 0
}

// 游戏结果
type SanguoxiaoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinID  int64      `protobuf:"varint,1,opt,name=winID,proto3" json:"winID,omitempty"`
	LoseID int64      `protobuf:"varint,2,opt,name=loseID,proto3" json:"loseID,omitempty"`
	Awards *GoodsList `protobuf:"bytes,3,opt,name=awards,proto3" json:"awards,omitempty"` // 奖品 对应商品(GoodsInfo)ID
}

func (x *SanguoxiaoResult) Reset() {
	*x = SanguoxiaoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoResult) ProtoMessage() {}

func (x *SanguoxiaoResult) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoResult.ProtoReflect.Descriptor instead.
func (*SanguoxiaoResult) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{4}
}

func (x *SanguoxiaoResult) GetWinID() int64 {
	if x != nil {
		return x.WinID
	}
	return 0
}

func (x *SanguoxiaoResult) GetLoseID() int64 {
	if x != nil {
		return x.LoseID
	}
	return 0
}

func (x *SanguoxiaoResult) GetAwards() *GoodsList {
	if x != nil {
		return x.Awards
	}
	return nil
}

////////////////////////////////////////////////////
// [挑战]
type ChallengeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChallengeReq) Reset() {
	*x = ChallengeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeReq) ProtoMessage() {}

func (x *ChallengeReq) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeReq.ProtoReflect.Descriptor instead.
func (*ChallengeReq) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{5}
}

type ChallengeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstID  int64             `protobuf:"varint,1,opt,name=firstID,proto3" json:"firstID,omitempty"`  // 首发者ID
	RedCamp  *SanguoxiaoPlayer `protobuf:"bytes,2,opt,name=redCamp,proto3" json:"redCamp,omitempty"`   // 红方信息
	BlueCamp *SanguoxiaoPlayer `protobuf:"bytes,3,opt,name=blueCamp,proto3" json:"blueCamp,omitempty"` // 蓝方信息
}

func (x *ChallengeResp) Reset() {
	*x = ChallengeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeResp) ProtoMessage() {}

func (x *ChallengeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeResp.ProtoReflect.Descriptor instead.
func (*ChallengeResp) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{6}
}

func (x *ChallengeResp) GetFirstID() int64 {
	if x != nil {
		return x.FirstID
	}
	return 0
}

func (x *ChallengeResp) GetRedCamp() *SanguoxiaoPlayer {
	if x != nil {
		return x.RedCamp
	}
	return nil
}

func (x *ChallengeResp) GetBlueCamp() *SanguoxiaoPlayer {
	if x != nil {
		return x.BlueCamp
	}
	return nil
}

/////////////////////////////////////////////////////
//场景
type SanguoxiaoSceneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp int64             `protobuf:"varint,1,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"` // 时间戳
	Inning    string            `protobuf:"bytes,2,opt,name=inning,proto3" json:"inning,omitempty"`        // 牌局号
	Board     *SgxBoardInfo     `protobuf:"bytes,3,opt,name=board,proto3" json:"board,omitempty"`          // 方格盘信息
	RedCamp   *SanguoxiaoPlayer `protobuf:"bytes,4,opt,name=redCamp,proto3" json:"redCamp,omitempty"`      // 红方
	BlueCamp  *SanguoxiaoPlayer `protobuf:"bytes,5,opt,name=blueCamp,proto3" json:"blueCamp,omitempty"`    // 蓝方
}

func (x *SanguoxiaoSceneResp) Reset() {
	*x = SanguoxiaoSceneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoSceneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoSceneResp) ProtoMessage() {}

func (x *SanguoxiaoSceneResp) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoSceneResp.ProtoReflect.Descriptor instead.
func (*SanguoxiaoSceneResp) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{7}
}

func (x *SanguoxiaoSceneResp) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *SanguoxiaoSceneResp) GetInning() string {
	if x != nil {
		return x.Inning
	}
	return ""
}

func (x *SanguoxiaoSceneResp) GetBoard() *SgxBoardInfo {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *SanguoxiaoSceneResp) GetRedCamp() *SanguoxiaoPlayer {
	if x != nil {
		return x.RedCamp
	}
	return nil
}

func (x *SanguoxiaoSceneResp) GetBlueCamp() *SanguoxiaoPlayer {
	if x != nil {
		return x.BlueCamp
	}
	return nil
}

// 状态-玩家操作
type SanguoxiaoStatePlayingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo `protobuf:"bytes,1,opt,name=times,proto3" json:"times,omitempty"`
	UserID int64     `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"` // 当前操作方
}

func (x *SanguoxiaoStatePlayingResp) Reset() {
	*x = SanguoxiaoStatePlayingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoStatePlayingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoStatePlayingResp) ProtoMessage() {}

func (x *SanguoxiaoStatePlayingResp) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoStatePlayingResp.ProtoReflect.Descriptor instead.
func (*SanguoxiaoStatePlayingResp) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{8}
}

func (x *SanguoxiaoStatePlayingResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *SanguoxiaoStatePlayingResp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// 状态-方格消除
type SanguoxiaoStateEraseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times    *TimeInfo     `protobuf:"bytes,1,opt,name=times,proto3" json:"times,omitempty"`
	NowBoard *SgxBoardInfo `protobuf:"bytes,2,opt,name=nowBoard,proto3" json:"nowBoard,omitempty"` // 当前盘子信息
}

func (x *SanguoxiaoStateEraseResp) Reset() {
	*x = SanguoxiaoStateEraseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoStateEraseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoStateEraseResp) ProtoMessage() {}

func (x *SanguoxiaoStateEraseResp) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoStateEraseResp.ProtoReflect.Descriptor instead.
func (*SanguoxiaoStateEraseResp) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{9}
}

func (x *SanguoxiaoStateEraseResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *SanguoxiaoStateEraseResp) GetNowBoard() *SgxBoardInfo {
	if x != nil {
		return x.NowBoard
	}
	return nil
}

// 状态-游戏结算
type SanguoxiaoStateOverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  *TimeInfo         `protobuf:"bytes,1,opt,name=times,proto3" json:"times,omitempty"`
	Result *SanguoxiaoResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SanguoxiaoStateOverResp) Reset() {
	*x = SanguoxiaoStateOverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoStateOverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoStateOverResp) ProtoMessage() {}

func (x *SanguoxiaoStateOverResp) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoStateOverResp.ProtoReflect.Descriptor instead.
func (*SanguoxiaoStateOverResp) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{10}
}

func (x *SanguoxiaoStateOverResp) GetTimes() *TimeInfo {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *SanguoxiaoStateOverResp) GetResult() *SanguoxiaoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 交换
type SanguoxiaoSwapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin *SgxGrid `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"` //原先的格子
	Target *SgxGrid `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"` //移至的目标格子
}

func (x *SanguoxiaoSwapReq) Reset() {
	*x = SanguoxiaoSwapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoSwapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoSwapReq) ProtoMessage() {}

func (x *SanguoxiaoSwapReq) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoSwapReq.ProtoReflect.Descriptor instead.
func (*SanguoxiaoSwapReq) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{11}
}

func (x *SanguoxiaoSwapReq) GetOrigin() *SgxGrid {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *SanguoxiaoSwapReq) GetTarget() *SgxGrid {
	if x != nil {
		return x.Target
	}
	return nil
}

type SanguoxiaoSwapResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin *SgxGrid `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"` //原先的格子
	Target *SgxGrid `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"` //移至的目标格子
	Uid    int64    `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *SanguoxiaoSwapResp) Reset() {
	*x = SanguoxiaoSwapResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoSwapResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoSwapResp) ProtoMessage() {}

func (x *SanguoxiaoSwapResp) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoSwapResp.ProtoReflect.Descriptor instead.
func (*SanguoxiaoSwapResp) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{12}
}

func (x *SanguoxiaoSwapResp) GetOrigin() *SgxGrid {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *SanguoxiaoSwapResp) GetTarget() *SgxGrid {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *SanguoxiaoSwapResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 触发消除
type SanguoxiaoTriggerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64               `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RedCampHealth  int64               `protobuf:"varint,2,opt,name=redCampHealth,proto3" json:"redCampHealth,omitempty"`   // 消除后自己的血量 即UserID的血量
	BlueCampHealth int64               `protobuf:"varint,3,opt,name=blueCampHealth,proto3" json:"blueCampHealth,omitempty"` // 敌方血量
	PerBoard       *SgxBoardInfo       `protobuf:"bytes,4,opt,name=perBoard,proto3" json:"perBoard,omitempty"`              // 消除前
	NowBoard       *SgxBoardInfo       `protobuf:"bytes,5,opt,name=nowBoard,proto3" json:"nowBoard,omitempty"`              // 消除后
	Erase          []*SgxGrid          `protobuf:"bytes,6,rep,name=erase,proto3" json:"erase,omitempty"`                    // 被消除的格子
	Attacks        []*SanguoxiaoAttack `protobuf:"bytes,7,rep,name=attacks,proto3" json:"attacks,omitempty"`                //武将发起的伤害
}

func (x *SanguoxiaoTriggerResp) Reset() {
	*x = SanguoxiaoTriggerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguoxiao_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanguoxiaoTriggerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanguoxiaoTriggerResp) ProtoMessage() {}

func (x *SanguoxiaoTriggerResp) ProtoReflect() protoreflect.Message {
	mi := &file_sanguoxiao_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanguoxiaoTriggerResp.ProtoReflect.Descriptor instead.
func (*SanguoxiaoTriggerResp) Descriptor() ([]byte, []int) {
	return file_sanguoxiao_proto_rawDescGZIP(), []int{13}
}

func (x *SanguoxiaoTriggerResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SanguoxiaoTriggerResp) GetRedCampHealth() int64 {
	if x != nil {
		return x.RedCampHealth
	}
	return 0
}

func (x *SanguoxiaoTriggerResp) GetBlueCampHealth() int64 {
	if x != nil {
		return x.BlueCampHealth
	}
	return 0
}

func (x *SanguoxiaoTriggerResp) GetPerBoard() *SgxBoardInfo {
	if x != nil {
		return x.PerBoard
	}
	return nil
}

func (x *SanguoxiaoTriggerResp) GetNowBoard() *SgxBoardInfo {
	if x != nil {
		return x.NowBoard
	}
	return nil
}

func (x *SanguoxiaoTriggerResp) GetErase() []*SgxGrid {
	if x != nil {
		return x.Erase
	}
	return nil
}

func (x *SanguoxiaoTriggerResp) GetAttacks() []*SanguoxiaoAttack {
	if x != nil {
		return x.Attacks
	}
	return nil
}

var File_sanguoxiao_proto protoreflect.FileDescriptor

var file_sanguoxiao_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x07, 0x53, 0x67, 0x78, 0x47, 0x72, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x63, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x50, 0x69, 0x65, 0x63,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x31, 0x0a, 0x0c, 0x53, 0x67, 0x78, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x47,
	0x72, 0x69, 0x64, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x7a, 0x0a, 0x10, 0x53, 0x61,
	0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x65, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x5c, 0x0a, 0x10, 0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f,
	0x78, 0x69, 0x61, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68,
	0x65, 0x72, 0x61, 0x70, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x68, 0x65,
	0x72, 0x61, 0x70, 0x79, 0x22, 0x67, 0x0a, 0x10, 0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69,
	0x61, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x6f, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6c, 0x6f, 0x73, 0x65, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x0e, 0x0a,
	0x0c, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x22, 0x8b, 0x01,
	0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x64,
	0x43, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x07, 0x72, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x08, 0x62, 0x6c, 0x75,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x08, 0x62, 0x6c, 0x75, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x22, 0xd5, 0x01, 0x0a, 0x13,
	0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67,
	0x78, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69,
	0x61, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x64, 0x43, 0x61, 0x6d,
	0x70, 0x12, 0x30, 0x0a, 0x08, 0x62, 0x6c, 0x75, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78,
	0x69, 0x61, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x08, 0x62, 0x6c, 0x75, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x22, 0x58, 0x0a, 0x1a, 0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6c, 0x0a,
	0x18, 0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x45, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2c, 0x0a,
	0x08, 0x6e, 0x6f, 0x77, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x6e, 0x6f, 0x77, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x6b, 0x0a, 0x17, 0x53,
	0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5d, 0x0a, 0x11, 0x53, 0x61, 0x6e, 0x67,
	0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x47, 0x72, 0x69, 0x64, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x23, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x47, 0x72, 0x69, 0x64, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x70, 0x0a, 0x12, 0x53, 0x61, 0x6e, 0x67, 0x75,
	0x6f, 0x78, 0x69, 0x61, 0x6f, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x47, 0x72, 0x69, 0x64, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x23, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x47, 0x72, 0x69, 0x64, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xa6, 0x02, 0x0a, 0x15, 0x53, 0x61,
	0x6e, 0x67, 0x75, 0x6f, 0x78, 0x69, 0x61, 0x6f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65,
	0x64, 0x43, 0x61, 0x6d, 0x70, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x62,
	0x6c, 0x75, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x6c, 0x75, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x2c, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6e, 0x6f, 0x77, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x21, 0x0a, 0x05, 0x65, 0x72, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x67, 0x78, 0x47, 0x72, 0x69, 0x64, 0x52, 0x05, 0x65, 0x72, 0x61,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6e, 0x67, 0x75, 0x6f, 0x78,
	0x69, 0x61, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x07, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x73, 0x2a, 0x47, 0x0a, 0x0b, 0x53, 0x67, 0x78, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x65, 0x72, 0x6f, 0x4e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x4a, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x55, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x48, 0x55, 0x49, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x55,
	0x4f, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x55, 0x10, 0x05, 0x2a, 0x4f, 0x0a, 0x08, 0x53,
	0x67, 0x78, 0x50, 0x69, 0x65, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x53, 0x47, 0x58,
	0x50, 0x69, 0x65, 0x63, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x69, 0x6e, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x4d, 0x75, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x68, 0x75, 0x69,
	0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x75, 0x6f, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x54,
	0x75, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x61, 0x6f, 0x10, 0x06, 0x42, 0x05, 0x5a, 0x03,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sanguoxiao_proto_rawDescOnce sync.Once
	file_sanguoxiao_proto_rawDescData = file_sanguoxiao_proto_rawDesc
)

func file_sanguoxiao_proto_rawDescGZIP() []byte {
	file_sanguoxiao_proto_rawDescOnce.Do(func() {
		file_sanguoxiao_proto_rawDescData = protoimpl.X.CompressGZIP(file_sanguoxiao_proto_rawDescData)
	})
	return file_sanguoxiao_proto_rawDescData
}

var file_sanguoxiao_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sanguoxiao_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_sanguoxiao_proto_goTypes = []interface{}{
	(SgxHeroType)(0),                   // 0: pb.SgxHeroType
	(SgxPiece)(0),                      // 1: pb.SgxPiece
	(*SgxGrid)(nil),                    // 2: pb.SgxGrid
	(*SgxBoardInfo)(nil),               // 3: pb.SgxBoardInfo
	(*SanguoxiaoPlayer)(nil),           // 4: pb.SanguoxiaoPlayer
	(*SanguoxiaoAttack)(nil),           // 5: pb.SanguoxiaoAttack
	(*SanguoxiaoResult)(nil),           // 6: pb.SanguoxiaoResult
	(*ChallengeReq)(nil),               // 7: pb.ChallengeReq
	(*ChallengeResp)(nil),              // 8: pb.ChallengeResp
	(*SanguoxiaoSceneResp)(nil),        // 9: pb.SanguoxiaoSceneResp
	(*SanguoxiaoStatePlayingResp)(nil), // 10: pb.SanguoxiaoStatePlayingResp
	(*SanguoxiaoStateEraseResp)(nil),   // 11: pb.SanguoxiaoStateEraseResp
	(*SanguoxiaoStateOverResp)(nil),    // 12: pb.SanguoxiaoStateOverResp
	(*SanguoxiaoSwapReq)(nil),          // 13: pb.SanguoxiaoSwapReq
	(*SanguoxiaoSwapResp)(nil),         // 14: pb.SanguoxiaoSwapResp
	(*SanguoxiaoTriggerResp)(nil),      // 15: pb.SanguoxiaoTriggerResp
	(*PlayerInfo)(nil),                 // 16: pb.PlayerInfo
	(*HeroInfo)(nil),                   // 17: pb.HeroInfo
	(*GoodsList)(nil),                  // 18: pb.GoodsList
	(*TimeInfo)(nil),                   // 19: pb.TimeInfo
}
var file_sanguoxiao_proto_depIdxs = []int32{
	1,  // 0: pb.SgxGrid.core:type_name -> pb.SgxPiece
	2,  // 1: pb.SgxBoardInfo.cells:type_name -> pb.SgxGrid
	16, // 2: pb.SanguoxiaoPlayer.info:type_name -> pb.PlayerInfo
	17, // 3: pb.SanguoxiaoPlayer.arenaTeam:type_name -> pb.HeroInfo
	18, // 4: pb.SanguoxiaoResult.awards:type_name -> pb.GoodsList
	4,  // 5: pb.ChallengeResp.redCamp:type_name -> pb.SanguoxiaoPlayer
	4,  // 6: pb.ChallengeResp.blueCamp:type_name -> pb.SanguoxiaoPlayer
	3,  // 7: pb.SanguoxiaoSceneResp.board:type_name -> pb.SgxBoardInfo
	4,  // 8: pb.SanguoxiaoSceneResp.redCamp:type_name -> pb.SanguoxiaoPlayer
	4,  // 9: pb.SanguoxiaoSceneResp.blueCamp:type_name -> pb.SanguoxiaoPlayer
	19, // 10: pb.SanguoxiaoStatePlayingResp.times:type_name -> pb.TimeInfo
	19, // 11: pb.SanguoxiaoStateEraseResp.times:type_name -> pb.TimeInfo
	3,  // 12: pb.SanguoxiaoStateEraseResp.nowBoard:type_name -> pb.SgxBoardInfo
	19, // 13: pb.SanguoxiaoStateOverResp.times:type_name -> pb.TimeInfo
	6,  // 14: pb.SanguoxiaoStateOverResp.result:type_name -> pb.SanguoxiaoResult
	2,  // 15: pb.SanguoxiaoSwapReq.origin:type_name -> pb.SgxGrid
	2,  // 16: pb.SanguoxiaoSwapReq.target:type_name -> pb.SgxGrid
	2,  // 17: pb.SanguoxiaoSwapResp.origin:type_name -> pb.SgxGrid
	2,  // 18: pb.SanguoxiaoSwapResp.target:type_name -> pb.SgxGrid
	3,  // 19: pb.SanguoxiaoTriggerResp.perBoard:type_name -> pb.SgxBoardInfo
	3,  // 20: pb.SanguoxiaoTriggerResp.nowBoard:type_name -> pb.SgxBoardInfo
	2,  // 21: pb.SanguoxiaoTriggerResp.erase:type_name -> pb.SgxGrid
	5,  // 22: pb.SanguoxiaoTriggerResp.attacks:type_name -> pb.SanguoxiaoAttack
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_sanguoxiao_proto_init() }
func file_sanguoxiao_proto_init() {
	if File_sanguoxiao_proto != nil {
		return
	}
	file_baseinfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sanguoxiao_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SgxGrid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SgxBoardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoAttack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoSceneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoStatePlayingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoStateEraseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoStateOverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoSwapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoSwapResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguoxiao_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanguoxiaoTriggerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sanguoxiao_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sanguoxiao_proto_goTypes,
		DependencyIndexes: file_sanguoxiao_proto_depIdxs,
		EnumInfos:         file_sanguoxiao_proto_enumTypes,
		MessageInfos:      file_sanguoxiao_proto_msgTypes,
	}.Build()
	File_sanguoxiao_proto = out.File
	file_sanguoxiao_proto_rawDesc = nil
	file_sanguoxiao_proto_goTypes = nil
	file_sanguoxiao_proto_depIdxs = nil
}
