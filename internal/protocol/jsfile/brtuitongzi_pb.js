/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var baseinfo_pb = require('./baseinfo_pb.js');
goog.object.extend(proto, baseinfo_pb);
goog.exportSymbol('proto.pb.BrTuitongziBetReq', null, global);
goog.exportSymbol('proto.pb.BrTuitongziBetResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziCheckoutResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziHostReq', null, global);
goog.exportSymbol('proto.pb.BrTuitongziHostResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziOpenResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziSceneResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziStateOpenResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziStateOverResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziStatePlayingResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziStateStartResp', null, global);
goog.exportSymbol('proto.pb.BrTuitongziSuperHostReq', null, global);
goog.exportSymbol('proto.pb.BrTuitongziSuperHostResp', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziSceneResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.BrTuitongziSceneResp.repeatedFields_, null);
};
goog.inherits(proto.pb.BrTuitongziSceneResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziSceneResp.displayName = 'proto.pb.BrTuitongziSceneResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziStateStartResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziStateStartResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziStateStartResp.displayName = 'proto.pb.BrTuitongziStateStartResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziStatePlayingResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziStatePlayingResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziStatePlayingResp.displayName = 'proto.pb.BrTuitongziStatePlayingResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziStateOpenResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziStateOpenResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziStateOpenResp.displayName = 'proto.pb.BrTuitongziStateOpenResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziStateOverResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziStateOverResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziStateOverResp.displayName = 'proto.pb.BrTuitongziStateOverResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziBetReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziBetReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziBetReq.displayName = 'proto.pb.BrTuitongziBetReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziBetResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziBetResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziBetResp.displayName = 'proto.pb.BrTuitongziBetResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziOpenResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziOpenResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziOpenResp.displayName = 'proto.pb.BrTuitongziOpenResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziCheckoutResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.BrTuitongziCheckoutResp.repeatedFields_, null);
};
goog.inherits(proto.pb.BrTuitongziCheckoutResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziCheckoutResp.displayName = 'proto.pb.BrTuitongziCheckoutResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziHostReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziHostReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziHostReq.displayName = 'proto.pb.BrTuitongziHostReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziHostResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziHostResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziHostResp.displayName = 'proto.pb.BrTuitongziHostResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziSuperHostReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziSuperHostReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziSuperHostReq.displayName = 'proto.pb.BrTuitongziSuperHostReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BrTuitongziSuperHostResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BrTuitongziSuperHostResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BrTuitongziSuperHostResp.displayName = 'proto.pb.BrTuitongziSuperHostResp';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.BrTuitongziSceneResp.repeatedFields_ = [3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziSceneResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziSceneResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziSceneResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziSceneResp.toObject = function(includeInstance, msg) {
  var obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    inning: jspb.Message.getFieldWithDefault(msg, 2, ""),
    chipsList: jspb.Message.getRepeatedField(msg, 3),
    awardareasList: msg.getAwardareasList_asB64(),
    areabetsList: jspb.Message.getRepeatedField(msg, 5),
    mybetsList: jspb.Message.getRepeatedField(msg, 6),
    allplayers: (f = msg.getAllplayers()) && baseinfo_pb.PlayerList.toObject(includeInstance, f),
    remaincount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    startarea: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziSceneResp}
 */
proto.pb.BrTuitongziSceneResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziSceneResp;
  return proto.pb.BrTuitongziSceneResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziSceneResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziSceneResp}
 */
proto.pb.BrTuitongziSceneResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInning(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setChipsList(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addAwardareas(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setAreabetsList(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setMybetsList(value);
      break;
    case 7:
      var value = new baseinfo_pb.PlayerList;
      reader.readMessage(value,baseinfo_pb.PlayerList.deserializeBinaryFromReader);
      msg.setAllplayers(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRemaincount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartarea(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziSceneResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziSceneResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziSceneResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziSceneResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getInning();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChipsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getAwardareasList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      4,
      f
    );
  }
  f = message.getAreabetsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      5,
      f
    );
  }
  f = message.getMybetsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      6,
      f
    );
  }
  f = message.getAllplayers();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      baseinfo_pb.PlayerList.serializeBinaryToWriter
    );
  }
  f = message.getRemaincount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getStartarea();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int64 timeStamp = 1;
 * @return {number}
 */
proto.pb.BrTuitongziSceneResp.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziSceneResp.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string inning = 2;
 * @return {string}
 */
proto.pb.BrTuitongziSceneResp.prototype.getInning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.pb.BrTuitongziSceneResp.prototype.setInning = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated int32 chips = 3;
 * @return {!Array<number>}
 */
proto.pb.BrTuitongziSceneResp.prototype.getChipsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.pb.BrTuitongziSceneResp.prototype.setChipsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.pb.BrTuitongziSceneResp.prototype.addChips = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.BrTuitongziSceneResp.prototype.clearChipsList = function() {
  this.setChipsList([]);
};


/**
 * repeated bytes awardAreas = 4;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.BrTuitongziSceneResp.prototype.getAwardareasList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * repeated bytes awardAreas = 4;
 * This is a type-conversion wrapper around `getAwardareasList()`
 * @return {!Array<string>}
 */
proto.pb.BrTuitongziSceneResp.prototype.getAwardareasList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getAwardareasList()));
};


/**
 * repeated bytes awardAreas = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAwardareasList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.BrTuitongziSceneResp.prototype.getAwardareasList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getAwardareasList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.pb.BrTuitongziSceneResp.prototype.setAwardareasList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.pb.BrTuitongziSceneResp.prototype.addAwardareas = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.BrTuitongziSceneResp.prototype.clearAwardareasList = function() {
  this.setAwardareasList([]);
};


/**
 * repeated int64 areaBets = 5;
 * @return {!Array<number>}
 */
proto.pb.BrTuitongziSceneResp.prototype.getAreabetsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<number>} value */
proto.pb.BrTuitongziSceneResp.prototype.setAreabetsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.pb.BrTuitongziSceneResp.prototype.addAreabets = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.BrTuitongziSceneResp.prototype.clearAreabetsList = function() {
  this.setAreabetsList([]);
};


/**
 * repeated int64 myBets = 6;
 * @return {!Array<number>}
 */
proto.pb.BrTuitongziSceneResp.prototype.getMybetsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.pb.BrTuitongziSceneResp.prototype.setMybetsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.pb.BrTuitongziSceneResp.prototype.addMybets = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.BrTuitongziSceneResp.prototype.clearMybetsList = function() {
  this.setMybetsList([]);
};


/**
 * optional PlayerList allPlayers = 7;
 * @return {?proto.pb.PlayerList}
 */
proto.pb.BrTuitongziSceneResp.prototype.getAllplayers = function() {
  return /** @type{?proto.pb.PlayerList} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.PlayerList, 7));
};


/** @param {?proto.pb.PlayerList|undefined} value */
proto.pb.BrTuitongziSceneResp.prototype.setAllplayers = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziSceneResp.prototype.clearAllplayers = function() {
  this.setAllplayers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziSceneResp.prototype.hasAllplayers = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 remainCount = 8;
 * @return {number}
 */
proto.pb.BrTuitongziSceneResp.prototype.getRemaincount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziSceneResp.prototype.setRemaincount = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 startArea = 9;
 * @return {number}
 */
proto.pb.BrTuitongziSceneResp.prototype.getStartarea = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziSceneResp.prototype.setStartarea = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziStateStartResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziStateStartResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziStateStartResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziStateStartResp.toObject = function(includeInstance, msg) {
  var obj = {
    times: (f = msg.getTimes()) && baseinfo_pb.TimeInfo.toObject(includeInstance, f),
    startarea: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dice: msg.getDice_asB64(),
    inning: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziStateStartResp}
 */
proto.pb.BrTuitongziStateStartResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziStateStartResp;
  return proto.pb.BrTuitongziStateStartResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziStateStartResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziStateStartResp}
 */
proto.pb.BrTuitongziStateStartResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new baseinfo_pb.TimeInfo;
      reader.readMessage(value,baseinfo_pb.TimeInfo.deserializeBinaryFromReader);
      msg.setTimes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartarea(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInning(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziStateStartResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziStateStartResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziStateStartResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziStateStartResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      baseinfo_pb.TimeInfo.serializeBinaryToWriter
    );
  }
  f = message.getStartarea();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDice_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getInning();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional TimeInfo times = 1;
 * @return {?proto.pb.TimeInfo}
 */
proto.pb.BrTuitongziStateStartResp.prototype.getTimes = function() {
  return /** @type{?proto.pb.TimeInfo} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.TimeInfo, 1));
};


/** @param {?proto.pb.TimeInfo|undefined} value */
proto.pb.BrTuitongziStateStartResp.prototype.setTimes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziStateStartResp.prototype.clearTimes = function() {
  this.setTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziStateStartResp.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 startArea = 2;
 * @return {number}
 */
proto.pb.BrTuitongziStateStartResp.prototype.getStartarea = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziStateStartResp.prototype.setStartarea = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes dice = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BrTuitongziStateStartResp.prototype.getDice = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes dice = 3;
 * This is a type-conversion wrapper around `getDice()`
 * @return {string}
 */
proto.pb.BrTuitongziStateStartResp.prototype.getDice_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDice()));
};


/**
 * optional bytes dice = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDice()`
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziStateStartResp.prototype.getDice_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDice()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.BrTuitongziStateStartResp.prototype.setDice = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string inning = 4;
 * @return {string}
 */
proto.pb.BrTuitongziStateStartResp.prototype.getInning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.pb.BrTuitongziStateStartResp.prototype.setInning = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziStatePlayingResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziStatePlayingResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziStatePlayingResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziStatePlayingResp.toObject = function(includeInstance, msg) {
  var obj = {
    times: (f = msg.getTimes()) && baseinfo_pb.TimeInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziStatePlayingResp}
 */
proto.pb.BrTuitongziStatePlayingResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziStatePlayingResp;
  return proto.pb.BrTuitongziStatePlayingResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziStatePlayingResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziStatePlayingResp}
 */
proto.pb.BrTuitongziStatePlayingResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new baseinfo_pb.TimeInfo;
      reader.readMessage(value,baseinfo_pb.TimeInfo.deserializeBinaryFromReader);
      msg.setTimes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziStatePlayingResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziStatePlayingResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziStatePlayingResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziStatePlayingResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      baseinfo_pb.TimeInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimeInfo times = 1;
 * @return {?proto.pb.TimeInfo}
 */
proto.pb.BrTuitongziStatePlayingResp.prototype.getTimes = function() {
  return /** @type{?proto.pb.TimeInfo} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.TimeInfo, 1));
};


/** @param {?proto.pb.TimeInfo|undefined} value */
proto.pb.BrTuitongziStatePlayingResp.prototype.setTimes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziStatePlayingResp.prototype.clearTimes = function() {
  this.setTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziStatePlayingResp.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziStateOpenResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziStateOpenResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziStateOpenResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziStateOpenResp.toObject = function(includeInstance, msg) {
  var obj = {
    times: (f = msg.getTimes()) && baseinfo_pb.TimeInfo.toObject(includeInstance, f),
    openinfo: (f = msg.getOpeninfo()) && proto.pb.BrTuitongziOpenResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziStateOpenResp}
 */
proto.pb.BrTuitongziStateOpenResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziStateOpenResp;
  return proto.pb.BrTuitongziStateOpenResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziStateOpenResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziStateOpenResp}
 */
proto.pb.BrTuitongziStateOpenResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new baseinfo_pb.TimeInfo;
      reader.readMessage(value,baseinfo_pb.TimeInfo.deserializeBinaryFromReader);
      msg.setTimes(value);
      break;
    case 2:
      var value = new proto.pb.BrTuitongziOpenResp;
      reader.readMessage(value,proto.pb.BrTuitongziOpenResp.deserializeBinaryFromReader);
      msg.setOpeninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziStateOpenResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziStateOpenResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziStateOpenResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziStateOpenResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      baseinfo_pb.TimeInfo.serializeBinaryToWriter
    );
  }
  f = message.getOpeninfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.BrTuitongziOpenResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimeInfo times = 1;
 * @return {?proto.pb.TimeInfo}
 */
proto.pb.BrTuitongziStateOpenResp.prototype.getTimes = function() {
  return /** @type{?proto.pb.TimeInfo} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.TimeInfo, 1));
};


/** @param {?proto.pb.TimeInfo|undefined} value */
proto.pb.BrTuitongziStateOpenResp.prototype.setTimes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziStateOpenResp.prototype.clearTimes = function() {
  this.setTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziStateOpenResp.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BrTuitongziOpenResp openInfo = 2;
 * @return {?proto.pb.BrTuitongziOpenResp}
 */
proto.pb.BrTuitongziStateOpenResp.prototype.getOpeninfo = function() {
  return /** @type{?proto.pb.BrTuitongziOpenResp} */ (
    jspb.Message.getWrapperField(this, proto.pb.BrTuitongziOpenResp, 2));
};


/** @param {?proto.pb.BrTuitongziOpenResp|undefined} value */
proto.pb.BrTuitongziStateOpenResp.prototype.setOpeninfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziStateOpenResp.prototype.clearOpeninfo = function() {
  this.setOpeninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziStateOpenResp.prototype.hasOpeninfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziStateOverResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziStateOverResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziStateOverResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziStateOverResp.toObject = function(includeInstance, msg) {
  var obj = {
    times: (f = msg.getTimes()) && baseinfo_pb.TimeInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziStateOverResp}
 */
proto.pb.BrTuitongziStateOverResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziStateOverResp;
  return proto.pb.BrTuitongziStateOverResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziStateOverResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziStateOverResp}
 */
proto.pb.BrTuitongziStateOverResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new baseinfo_pb.TimeInfo;
      reader.readMessage(value,baseinfo_pb.TimeInfo.deserializeBinaryFromReader);
      msg.setTimes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziStateOverResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziStateOverResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziStateOverResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziStateOverResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      baseinfo_pb.TimeInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimeInfo times = 1;
 * @return {?proto.pb.TimeInfo}
 */
proto.pb.BrTuitongziStateOverResp.prototype.getTimes = function() {
  return /** @type{?proto.pb.TimeInfo} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.TimeInfo, 1));
};


/** @param {?proto.pb.TimeInfo|undefined} value */
proto.pb.BrTuitongziStateOverResp.prototype.setTimes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziStateOverResp.prototype.clearTimes = function() {
  this.setTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziStateOverResp.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziBetReq.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziBetReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziBetReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziBetReq.toObject = function(includeInstance, msg) {
  var obj = {
    betarea: jspb.Message.getFieldWithDefault(msg, 1, 0),
    betscore: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziBetReq}
 */
proto.pb.BrTuitongziBetReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziBetReq;
  return proto.pb.BrTuitongziBetReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziBetReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziBetReq}
 */
proto.pb.BrTuitongziBetReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBetarea(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBetscore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziBetReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziBetReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziBetReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziBetReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBetarea();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBetscore();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 betArea = 1;
 * @return {number}
 */
proto.pb.BrTuitongziBetReq.prototype.getBetarea = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziBetReq.prototype.setBetarea = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 betScore = 2;
 * @return {number}
 */
proto.pb.BrTuitongziBetReq.prototype.getBetscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziBetReq.prototype.setBetscore = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziBetResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziBetResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziBetResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziBetResp.toObject = function(includeInstance, msg) {
  var obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    betarea: jspb.Message.getFieldWithDefault(msg, 2, 0),
    betscore: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziBetResp}
 */
proto.pb.BrTuitongziBetResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziBetResp;
  return proto.pb.BrTuitongziBetResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziBetResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziBetResp}
 */
proto.pb.BrTuitongziBetResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBetarea(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBetscore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziBetResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziBetResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziBetResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziBetResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBetarea();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBetscore();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 userID = 1;
 * @return {number}
 */
proto.pb.BrTuitongziBetResp.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziBetResp.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 betArea = 2;
 * @return {number}
 */
proto.pb.BrTuitongziBetResp.prototype.getBetarea = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziBetResp.prototype.setBetarea = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 betScore = 3;
 * @return {number}
 */
proto.pb.BrTuitongziBetResp.prototype.getBetscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziBetResp.prototype.setBetscore = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziOpenResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziOpenResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziOpenResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziOpenResp.toObject = function(includeInstance, msg) {
  var obj = {
    awardarea: msg.getAwardarea_asB64(),
    bankercard: (f = msg.getBankercard()) && baseinfo_pb.CardInfo.toObject(includeInstance, f),
    shuncard: (f = msg.getShuncard()) && baseinfo_pb.CardInfo.toObject(includeInstance, f),
    tiancard: (f = msg.getTiancard()) && baseinfo_pb.CardInfo.toObject(includeInstance, f),
    dicard: (f = msg.getDicard()) && baseinfo_pb.CardInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziOpenResp}
 */
proto.pb.BrTuitongziOpenResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziOpenResp;
  return proto.pb.BrTuitongziOpenResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziOpenResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziOpenResp}
 */
proto.pb.BrTuitongziOpenResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAwardarea(value);
      break;
    case 2:
      var value = new baseinfo_pb.CardInfo;
      reader.readMessage(value,baseinfo_pb.CardInfo.deserializeBinaryFromReader);
      msg.setBankercard(value);
      break;
    case 3:
      var value = new baseinfo_pb.CardInfo;
      reader.readMessage(value,baseinfo_pb.CardInfo.deserializeBinaryFromReader);
      msg.setShuncard(value);
      break;
    case 4:
      var value = new baseinfo_pb.CardInfo;
      reader.readMessage(value,baseinfo_pb.CardInfo.deserializeBinaryFromReader);
      msg.setTiancard(value);
      break;
    case 5:
      var value = new baseinfo_pb.CardInfo;
      reader.readMessage(value,baseinfo_pb.CardInfo.deserializeBinaryFromReader);
      msg.setDicard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziOpenResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziOpenResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziOpenResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziOpenResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAwardarea_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getBankercard();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      baseinfo_pb.CardInfo.serializeBinaryToWriter
    );
  }
  f = message.getShuncard();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      baseinfo_pb.CardInfo.serializeBinaryToWriter
    );
  }
  f = message.getTiancard();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      baseinfo_pb.CardInfo.serializeBinaryToWriter
    );
  }
  f = message.getDicard();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      baseinfo_pb.CardInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes awardArea = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BrTuitongziOpenResp.prototype.getAwardarea = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes awardArea = 1;
 * This is a type-conversion wrapper around `getAwardarea()`
 * @return {string}
 */
proto.pb.BrTuitongziOpenResp.prototype.getAwardarea_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAwardarea()));
};


/**
 * optional bytes awardArea = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAwardarea()`
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziOpenResp.prototype.getAwardarea_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAwardarea()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.BrTuitongziOpenResp.prototype.setAwardarea = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional CardInfo bankerCard = 2;
 * @return {?proto.pb.CardInfo}
 */
proto.pb.BrTuitongziOpenResp.prototype.getBankercard = function() {
  return /** @type{?proto.pb.CardInfo} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.CardInfo, 2));
};


/** @param {?proto.pb.CardInfo|undefined} value */
proto.pb.BrTuitongziOpenResp.prototype.setBankercard = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziOpenResp.prototype.clearBankercard = function() {
  this.setBankercard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziOpenResp.prototype.hasBankercard = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CardInfo shunCard = 3;
 * @return {?proto.pb.CardInfo}
 */
proto.pb.BrTuitongziOpenResp.prototype.getShuncard = function() {
  return /** @type{?proto.pb.CardInfo} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.CardInfo, 3));
};


/** @param {?proto.pb.CardInfo|undefined} value */
proto.pb.BrTuitongziOpenResp.prototype.setShuncard = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziOpenResp.prototype.clearShuncard = function() {
  this.setShuncard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziOpenResp.prototype.hasShuncard = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CardInfo tianCard = 4;
 * @return {?proto.pb.CardInfo}
 */
proto.pb.BrTuitongziOpenResp.prototype.getTiancard = function() {
  return /** @type{?proto.pb.CardInfo} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.CardInfo, 4));
};


/** @param {?proto.pb.CardInfo|undefined} value */
proto.pb.BrTuitongziOpenResp.prototype.setTiancard = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziOpenResp.prototype.clearTiancard = function() {
  this.setTiancard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziOpenResp.prototype.hasTiancard = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CardInfo diCard = 5;
 * @return {?proto.pb.CardInfo}
 */
proto.pb.BrTuitongziOpenResp.prototype.getDicard = function() {
  return /** @type{?proto.pb.CardInfo} */ (
    jspb.Message.getWrapperField(this, baseinfo_pb.CardInfo, 5));
};


/** @param {?proto.pb.CardInfo|undefined} value */
proto.pb.BrTuitongziOpenResp.prototype.setDicard = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.BrTuitongziOpenResp.prototype.clearDicard = function() {
  this.setDicard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BrTuitongziOpenResp.prototype.hasDicard = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.BrTuitongziCheckoutResp.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziCheckoutResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziCheckoutResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziCheckoutResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziCheckoutResp.toObject = function(includeInstance, msg) {
  var obj = {
    myacquire: jspb.Message.getFieldWithDefault(msg, 1, 0),
    acquiresList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziCheckoutResp}
 */
proto.pb.BrTuitongziCheckoutResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziCheckoutResp;
  return proto.pb.BrTuitongziCheckoutResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziCheckoutResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziCheckoutResp}
 */
proto.pb.BrTuitongziCheckoutResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMyacquire(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setAcquiresList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziCheckoutResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziCheckoutResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziCheckoutResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziCheckoutResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMyacquire();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAcquiresList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 myAcquire = 1;
 * @return {number}
 */
proto.pb.BrTuitongziCheckoutResp.prototype.getMyacquire = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziCheckoutResp.prototype.setMyacquire = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int64 acquires = 2;
 * @return {!Array<number>}
 */
proto.pb.BrTuitongziCheckoutResp.prototype.getAcquiresList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.pb.BrTuitongziCheckoutResp.prototype.setAcquiresList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.pb.BrTuitongziCheckoutResp.prototype.addAcquires = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.BrTuitongziCheckoutResp.prototype.clearAcquiresList = function() {
  this.setAcquiresList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziHostReq.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziHostReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziHostReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziHostReq.toObject = function(includeInstance, msg) {
  var obj = {
    iswant: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziHostReq}
 */
proto.pb.BrTuitongziHostReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziHostReq;
  return proto.pb.BrTuitongziHostReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziHostReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziHostReq}
 */
proto.pb.BrTuitongziHostReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziHostReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziHostReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziHostReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziHostReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIswant();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool isWant = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.BrTuitongziHostReq.prototype.getIswant = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.pb.BrTuitongziHostReq.prototype.setIswant = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziHostResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziHostResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziHostResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziHostResp.toObject = function(includeInstance, msg) {
  var obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    iswant: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziHostResp}
 */
proto.pb.BrTuitongziHostResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziHostResp;
  return proto.pb.BrTuitongziHostResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziHostResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziHostResp}
 */
proto.pb.BrTuitongziHostResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziHostResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziHostResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziHostResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziHostResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIswant();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 userID = 1;
 * @return {number}
 */
proto.pb.BrTuitongziHostResp.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziHostResp.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool isWant = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.BrTuitongziHostResp.prototype.getIswant = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.pb.BrTuitongziHostResp.prototype.setIswant = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziSuperHostReq.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziSuperHostReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziSuperHostReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziSuperHostReq.toObject = function(includeInstance, msg) {
  var obj = {
    iswant: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziSuperHostReq}
 */
proto.pb.BrTuitongziSuperHostReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziSuperHostReq;
  return proto.pb.BrTuitongziSuperHostReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziSuperHostReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziSuperHostReq}
 */
proto.pb.BrTuitongziSuperHostReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziSuperHostReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziSuperHostReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziSuperHostReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziSuperHostReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIswant();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool isWant = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.BrTuitongziSuperHostReq.prototype.getIswant = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.pb.BrTuitongziSuperHostReq.prototype.setIswant = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BrTuitongziSuperHostResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BrTuitongziSuperHostResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BrTuitongziSuperHostResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziSuperHostResp.toObject = function(includeInstance, msg) {
  var obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    iswant: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BrTuitongziSuperHostResp}
 */
proto.pb.BrTuitongziSuperHostResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BrTuitongziSuperHostResp;
  return proto.pb.BrTuitongziSuperHostResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BrTuitongziSuperHostResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BrTuitongziSuperHostResp}
 */
proto.pb.BrTuitongziSuperHostResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BrTuitongziSuperHostResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BrTuitongziSuperHostResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BrTuitongziSuperHostResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BrTuitongziSuperHostResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIswant();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 userID = 1;
 * @return {number}
 */
proto.pb.BrTuitongziSuperHostResp.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.BrTuitongziSuperHostResp.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool isWant = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.BrTuitongziSuperHostResp.prototype.getIswant = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.pb.BrTuitongziSuperHostResp.prototype.setIswant = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.pb);
