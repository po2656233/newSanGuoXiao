/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var game_pb = require('./game_pb.js');
goog.object.extend(proto, game_pb);
var player_pb = require('./player_pb.js');
goog.object.extend(proto, player_pb);
goog.exportSymbol('proto.pb.ZhaocaimiaoBetReq', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoBetResp', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoCell', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoEraseCell', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoOpenInfo', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoOpenResp', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoSceneResp', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoStateOpenResp', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoStatePlayingResp', null, global);
goog.exportSymbol('proto.pb.ZhaocaimiaoStateStartResp', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoSceneResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.ZhaocaimiaoSceneResp.repeatedFields_, null);
};
goog.inherits(proto.pb.ZhaocaimiaoSceneResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoSceneResp.displayName = 'proto.pb.ZhaocaimiaoSceneResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoStateStartResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.ZhaocaimiaoStateStartResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoStateStartResp.displayName = 'proto.pb.ZhaocaimiaoStateStartResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoStatePlayingResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.ZhaocaimiaoStatePlayingResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoStatePlayingResp.displayName = 'proto.pb.ZhaocaimiaoStatePlayingResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoStateOpenResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.ZhaocaimiaoStateOpenResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoStateOpenResp.displayName = 'proto.pb.ZhaocaimiaoStateOpenResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoBetReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.ZhaocaimiaoBetReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoBetReq.displayName = 'proto.pb.ZhaocaimiaoBetReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoBetResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.ZhaocaimiaoBetResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoBetResp.displayName = 'proto.pb.ZhaocaimiaoBetResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoCell = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.ZhaocaimiaoCell, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoCell.displayName = 'proto.pb.ZhaocaimiaoCell';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoEraseCell = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.ZhaocaimiaoEraseCell.repeatedFields_, null);
};
goog.inherits(proto.pb.ZhaocaimiaoEraseCell, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoEraseCell.displayName = 'proto.pb.ZhaocaimiaoEraseCell';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoOpenInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.ZhaocaimiaoOpenInfo.repeatedFields_, null);
};
goog.inherits(proto.pb.ZhaocaimiaoOpenInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoOpenInfo.displayName = 'proto.pb.ZhaocaimiaoOpenInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ZhaocaimiaoOpenResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.ZhaocaimiaoOpenResp.repeatedFields_, null);
};
goog.inherits(proto.pb.ZhaocaimiaoOpenResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ZhaocaimiaoOpenResp.displayName = 'proto.pb.ZhaocaimiaoOpenResp';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.ZhaocaimiaoSceneResp.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoSceneResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoSceneResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoSceneResp.toObject = function(includeInstance, msg) {
  var obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    inning: jspb.Message.getFieldWithDefault(msg, 2, ""),
    chipsList: jspb.Message.getRepeatedField(msg, 3),
    basebet: jspb.Message.getFieldWithDefault(msg, 4, 0),
    myinfo: (f = msg.getMyinfo()) && player_pb.PlayerInfo.toObject(includeInstance, f),
    openinfo: (f = msg.getOpeninfo()) && proto.pb.ZhaocaimiaoOpenResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoSceneResp}
 */
proto.pb.ZhaocaimiaoSceneResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoSceneResp;
  return proto.pb.ZhaocaimiaoSceneResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoSceneResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoSceneResp}
 */
proto.pb.ZhaocaimiaoSceneResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInning(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setChipsList(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBasebet(value);
      break;
    case 5:
      var value = new player_pb.PlayerInfo;
      reader.readMessage(value,player_pb.PlayerInfo.deserializeBinaryFromReader);
      msg.setMyinfo(value);
      break;
    case 6:
      var value = new proto.pb.ZhaocaimiaoOpenResp;
      reader.readMessage(value,proto.pb.ZhaocaimiaoOpenResp.deserializeBinaryFromReader);
      msg.setOpeninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoSceneResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoSceneResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoSceneResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getInning();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChipsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getBasebet();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMyinfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      player_pb.PlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getOpeninfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.pb.ZhaocaimiaoOpenResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 timeStamp = 1;
 * @return {number}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoSceneResp.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string inning = 2;
 * @return {string}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.getInning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.pb.ZhaocaimiaoSceneResp.prototype.setInning = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated int32 chips = 3;
 * @return {!Array<number>}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.getChipsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.pb.ZhaocaimiaoSceneResp.prototype.setChipsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.addChips = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.clearChipsList = function() {
  this.setChipsList([]);
};


/**
 * optional int64 baseBet = 4;
 * @return {number}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.getBasebet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoSceneResp.prototype.setBasebet = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional PlayerInfo myInfo = 5;
 * @return {?proto.pb.PlayerInfo}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.getMyinfo = function() {
  return /** @type{?proto.pb.PlayerInfo} */ (
    jspb.Message.getWrapperField(this, player_pb.PlayerInfo, 5));
};


/** @param {?proto.pb.PlayerInfo|undefined} value */
proto.pb.ZhaocaimiaoSceneResp.prototype.setMyinfo = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.clearMyinfo = function() {
  this.setMyinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.hasMyinfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ZhaocaimiaoOpenResp openInfo = 6;
 * @return {?proto.pb.ZhaocaimiaoOpenResp}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.getOpeninfo = function() {
  return /** @type{?proto.pb.ZhaocaimiaoOpenResp} */ (
    jspb.Message.getWrapperField(this, proto.pb.ZhaocaimiaoOpenResp, 6));
};


/** @param {?proto.pb.ZhaocaimiaoOpenResp|undefined} value */
proto.pb.ZhaocaimiaoSceneResp.prototype.setOpeninfo = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.clearOpeninfo = function() {
  this.setOpeninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.ZhaocaimiaoSceneResp.prototype.hasOpeninfo = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoStateStartResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoStateStartResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoStateStartResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoStateStartResp.toObject = function(includeInstance, msg) {
  var obj = {
    times: (f = msg.getTimes()) && game_pb.TimeInfo.toObject(includeInstance, f),
    inning: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoStateStartResp}
 */
proto.pb.ZhaocaimiaoStateStartResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoStateStartResp;
  return proto.pb.ZhaocaimiaoStateStartResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoStateStartResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoStateStartResp}
 */
proto.pb.ZhaocaimiaoStateStartResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new game_pb.TimeInfo;
      reader.readMessage(value,game_pb.TimeInfo.deserializeBinaryFromReader);
      msg.setTimes(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInning(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoStateStartResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoStateStartResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoStateStartResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoStateStartResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      game_pb.TimeInfo.serializeBinaryToWriter
    );
  }
  f = message.getInning();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional TimeInfo times = 1;
 * @return {?proto.pb.TimeInfo}
 */
proto.pb.ZhaocaimiaoStateStartResp.prototype.getTimes = function() {
  return /** @type{?proto.pb.TimeInfo} */ (
    jspb.Message.getWrapperField(this, game_pb.TimeInfo, 1));
};


/** @param {?proto.pb.TimeInfo|undefined} value */
proto.pb.ZhaocaimiaoStateStartResp.prototype.setTimes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.ZhaocaimiaoStateStartResp.prototype.clearTimes = function() {
  this.setTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.ZhaocaimiaoStateStartResp.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string inning = 2;
 * @return {string}
 */
proto.pb.ZhaocaimiaoStateStartResp.prototype.getInning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.pb.ZhaocaimiaoStateStartResp.prototype.setInning = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoStatePlayingResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoStatePlayingResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoStatePlayingResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoStatePlayingResp.toObject = function(includeInstance, msg) {
  var obj = {
    times: (f = msg.getTimes()) && game_pb.TimeInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoStatePlayingResp}
 */
proto.pb.ZhaocaimiaoStatePlayingResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoStatePlayingResp;
  return proto.pb.ZhaocaimiaoStatePlayingResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoStatePlayingResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoStatePlayingResp}
 */
proto.pb.ZhaocaimiaoStatePlayingResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new game_pb.TimeInfo;
      reader.readMessage(value,game_pb.TimeInfo.deserializeBinaryFromReader);
      msg.setTimes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoStatePlayingResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoStatePlayingResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoStatePlayingResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoStatePlayingResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      game_pb.TimeInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimeInfo times = 1;
 * @return {?proto.pb.TimeInfo}
 */
proto.pb.ZhaocaimiaoStatePlayingResp.prototype.getTimes = function() {
  return /** @type{?proto.pb.TimeInfo} */ (
    jspb.Message.getWrapperField(this, game_pb.TimeInfo, 1));
};


/** @param {?proto.pb.TimeInfo|undefined} value */
proto.pb.ZhaocaimiaoStatePlayingResp.prototype.setTimes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.ZhaocaimiaoStatePlayingResp.prototype.clearTimes = function() {
  this.setTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.ZhaocaimiaoStatePlayingResp.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoStateOpenResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoStateOpenResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoStateOpenResp.toObject = function(includeInstance, msg) {
  var obj = {
    times: (f = msg.getTimes()) && game_pb.TimeInfo.toObject(includeInstance, f),
    openinfo: (f = msg.getOpeninfo()) && proto.pb.ZhaocaimiaoOpenResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoStateOpenResp}
 */
proto.pb.ZhaocaimiaoStateOpenResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoStateOpenResp;
  return proto.pb.ZhaocaimiaoStateOpenResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoStateOpenResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoStateOpenResp}
 */
proto.pb.ZhaocaimiaoStateOpenResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new game_pb.TimeInfo;
      reader.readMessage(value,game_pb.TimeInfo.deserializeBinaryFromReader);
      msg.setTimes(value);
      break;
    case 2:
      var value = new proto.pb.ZhaocaimiaoOpenResp;
      reader.readMessage(value,proto.pb.ZhaocaimiaoOpenResp.deserializeBinaryFromReader);
      msg.setOpeninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoStateOpenResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoStateOpenResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoStateOpenResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      game_pb.TimeInfo.serializeBinaryToWriter
    );
  }
  f = message.getOpeninfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.ZhaocaimiaoOpenResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimeInfo times = 1;
 * @return {?proto.pb.TimeInfo}
 */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.getTimes = function() {
  return /** @type{?proto.pb.TimeInfo} */ (
    jspb.Message.getWrapperField(this, game_pb.TimeInfo, 1));
};


/** @param {?proto.pb.TimeInfo|undefined} value */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.setTimes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.clearTimes = function() {
  this.setTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ZhaocaimiaoOpenResp openInfo = 2;
 * @return {?proto.pb.ZhaocaimiaoOpenResp}
 */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.getOpeninfo = function() {
  return /** @type{?proto.pb.ZhaocaimiaoOpenResp} */ (
    jspb.Message.getWrapperField(this, proto.pb.ZhaocaimiaoOpenResp, 2));
};


/** @param {?proto.pb.ZhaocaimiaoOpenResp|undefined} value */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.setOpeninfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.clearOpeninfo = function() {
  this.setOpeninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.ZhaocaimiaoStateOpenResp.prototype.hasOpeninfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoBetReq.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoBetReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoBetReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoBetReq.toObject = function(includeInstance, msg) {
  var obj = {
    betamount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    betrate: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoBetReq}
 */
proto.pb.ZhaocaimiaoBetReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoBetReq;
  return proto.pb.ZhaocaimiaoBetReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoBetReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoBetReq}
 */
proto.pb.ZhaocaimiaoBetReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBetamount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBetrate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoBetReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoBetReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoBetReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoBetReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBetamount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBetrate();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 betAmount = 1;
 * @return {number}
 */
proto.pb.ZhaocaimiaoBetReq.prototype.getBetamount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoBetReq.prototype.setBetamount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 betRate = 2;
 * @return {number}
 */
proto.pb.ZhaocaimiaoBetReq.prototype.getBetrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoBetReq.prototype.setBetrate = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoBetResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoBetResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoBetResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoBetResp.toObject = function(includeInstance, msg) {
  var obj = {
    betscore: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoBetResp}
 */
proto.pb.ZhaocaimiaoBetResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoBetResp;
  return proto.pb.ZhaocaimiaoBetResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoBetResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoBetResp}
 */
proto.pb.ZhaocaimiaoBetResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBetscore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoBetResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoBetResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoBetResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoBetResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBetscore();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 betScore = 1;
 * @return {number}
 */
proto.pb.ZhaocaimiaoBetResp.prototype.getBetscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoBetResp.prototype.setBetscore = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoCell.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoCell.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoCell} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoCell.toObject = function(includeInstance, msg) {
  var obj = {
    row: jspb.Message.getFieldWithDefault(msg, 1, 0),
    col: jspb.Message.getFieldWithDefault(msg, 2, 0),
    element: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoCell}
 */
proto.pb.ZhaocaimiaoCell.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoCell;
  return proto.pb.ZhaocaimiaoCell.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoCell} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoCell}
 */
proto.pb.ZhaocaimiaoCell.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRow(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCol(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setElement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoCell.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoCell.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoCell} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoCell.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRow();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCol();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getElement();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 row = 1;
 * @return {number}
 */
proto.pb.ZhaocaimiaoCell.prototype.getRow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoCell.prototype.setRow = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 col = 2;
 * @return {number}
 */
proto.pb.ZhaocaimiaoCell.prototype.getCol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoCell.prototype.setCol = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 element = 3;
 * @return {number}
 */
proto.pb.ZhaocaimiaoCell.prototype.getElement = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoCell.prototype.setElement = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.ZhaocaimiaoEraseCell.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoEraseCell.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoEraseCell.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoEraseCell} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoEraseCell.toObject = function(includeInstance, msg) {
  var obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    samesList: jspb.Message.toObjectList(msg.getSamesList(),
    proto.pb.ZhaocaimiaoCell.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoEraseCell}
 */
proto.pb.ZhaocaimiaoEraseCell.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoEraseCell;
  return proto.pb.ZhaocaimiaoEraseCell.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoEraseCell} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoEraseCell}
 */
proto.pb.ZhaocaimiaoEraseCell.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 2:
      var value = new proto.pb.ZhaocaimiaoCell;
      reader.readMessage(value,proto.pb.ZhaocaimiaoCell.deserializeBinaryFromReader);
      msg.addSames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoEraseCell.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoEraseCell.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoEraseCell} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoEraseCell.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pb.ZhaocaimiaoCell.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 index = 1;
 * @return {number}
 */
proto.pb.ZhaocaimiaoEraseCell.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoEraseCell.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ZhaocaimiaoCell sames = 2;
 * @return {!Array<!proto.pb.ZhaocaimiaoCell>}
 */
proto.pb.ZhaocaimiaoEraseCell.prototype.getSamesList = function() {
  return /** @type{!Array<!proto.pb.ZhaocaimiaoCell>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.ZhaocaimiaoCell, 2));
};


/** @param {!Array<!proto.pb.ZhaocaimiaoCell>} value */
proto.pb.ZhaocaimiaoEraseCell.prototype.setSamesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.ZhaocaimiaoCell=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.ZhaocaimiaoCell}
 */
proto.pb.ZhaocaimiaoEraseCell.prototype.addSames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.ZhaocaimiaoCell, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.ZhaocaimiaoEraseCell.prototype.clearSamesList = function() {
  this.setSamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.ZhaocaimiaoOpenInfo.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoOpenInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoOpenInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoOpenInfo.toObject = function(includeInstance, msg) {
  var obj = {
    isfreeopen: jspb.Message.getFieldWithDefault(msg, 1, false),
    awardscore: jspb.Message.getFieldWithDefault(msg, 2, 0),
    awardrate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    openList: jspb.Message.toObjectList(msg.getOpenList(),
    proto.pb.ZhaocaimiaoCell.toObject, includeInstance),
    cellsList: jspb.Message.toObjectList(msg.getCellsList(),
    proto.pb.ZhaocaimiaoEraseCell.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoOpenInfo}
 */
proto.pb.ZhaocaimiaoOpenInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoOpenInfo;
  return proto.pb.ZhaocaimiaoOpenInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoOpenInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoOpenInfo}
 */
proto.pb.ZhaocaimiaoOpenInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfreeopen(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAwardscore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAwardrate(value);
      break;
    case 4:
      var value = new proto.pb.ZhaocaimiaoCell;
      reader.readMessage(value,proto.pb.ZhaocaimiaoCell.deserializeBinaryFromReader);
      msg.addOpen(value);
      break;
    case 5:
      var value = new proto.pb.ZhaocaimiaoEraseCell;
      reader.readMessage(value,proto.pb.ZhaocaimiaoEraseCell.deserializeBinaryFromReader);
      msg.addCells(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoOpenInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoOpenInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoOpenInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsfreeopen();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAwardscore();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAwardrate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOpenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.pb.ZhaocaimiaoCell.serializeBinaryToWriter
    );
  }
  f = message.getCellsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.pb.ZhaocaimiaoEraseCell.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool isFreeOpen = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.getIsfreeopen = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.pb.ZhaocaimiaoOpenInfo.prototype.setIsfreeopen = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int64 awardScore = 2;
 * @return {number}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.getAwardscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoOpenInfo.prototype.setAwardscore = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 awardRate = 3;
 * @return {number}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.getAwardrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoOpenInfo.prototype.setAwardrate = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ZhaocaimiaoCell open = 4;
 * @return {!Array<!proto.pb.ZhaocaimiaoCell>}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.getOpenList = function() {
  return /** @type{!Array<!proto.pb.ZhaocaimiaoCell>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.ZhaocaimiaoCell, 4));
};


/** @param {!Array<!proto.pb.ZhaocaimiaoCell>} value */
proto.pb.ZhaocaimiaoOpenInfo.prototype.setOpenList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.pb.ZhaocaimiaoCell=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.ZhaocaimiaoCell}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.addOpen = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.pb.ZhaocaimiaoCell, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.clearOpenList = function() {
  this.setOpenList([]);
};


/**
 * repeated ZhaocaimiaoEraseCell cells = 5;
 * @return {!Array<!proto.pb.ZhaocaimiaoEraseCell>}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.getCellsList = function() {
  return /** @type{!Array<!proto.pb.ZhaocaimiaoEraseCell>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.ZhaocaimiaoEraseCell, 5));
};


/** @param {!Array<!proto.pb.ZhaocaimiaoEraseCell>} value */
proto.pb.ZhaocaimiaoOpenInfo.prototype.setCellsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.pb.ZhaocaimiaoEraseCell=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.ZhaocaimiaoEraseCell}
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.addCells = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.pb.ZhaocaimiaoEraseCell, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.ZhaocaimiaoOpenInfo.prototype.clearCellsList = function() {
  this.setCellsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.ZhaocaimiaoOpenResp.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ZhaocaimiaoOpenResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ZhaocaimiaoOpenResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoOpenResp.toObject = function(includeInstance, msg) {
  var obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    freeround: jspb.Message.getFieldWithDefault(msg, 2, 0),
    allfreeround: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalscore: jspb.Message.getFieldWithDefault(msg, 4, 0),
    inning: jspb.Message.getFieldWithDefault(msg, 5, ""),
    awardsList: jspb.Message.toObjectList(msg.getAwardsList(),
    proto.pb.ZhaocaimiaoOpenInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ZhaocaimiaoOpenResp}
 */
proto.pb.ZhaocaimiaoOpenResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ZhaocaimiaoOpenResp;
  return proto.pb.ZhaocaimiaoOpenResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ZhaocaimiaoOpenResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ZhaocaimiaoOpenResp}
 */
proto.pb.ZhaocaimiaoOpenResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFreeround(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAllfreeround(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalscore(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInning(value);
      break;
    case 6:
      var value = new proto.pb.ZhaocaimiaoOpenInfo;
      reader.readMessage(value,proto.pb.ZhaocaimiaoOpenInfo.deserializeBinaryFromReader);
      msg.addAwards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ZhaocaimiaoOpenResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ZhaocaimiaoOpenResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ZhaocaimiaoOpenResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getFreeround();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAllfreeround();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTotalscore();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getInning();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAwardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.pb.ZhaocaimiaoOpenInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 timeStamp = 1;
 * @return {number}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoOpenResp.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 freeRound = 2;
 * @return {number}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.getFreeround = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoOpenResp.prototype.setFreeround = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 allFreeRound = 3;
 * @return {number}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.getAllfreeround = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoOpenResp.prototype.setAllfreeround = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 totalScore = 4;
 * @return {number}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.getTotalscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.pb.ZhaocaimiaoOpenResp.prototype.setTotalscore = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string inning = 5;
 * @return {string}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.getInning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.pb.ZhaocaimiaoOpenResp.prototype.setInning = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated ZhaocaimiaoOpenInfo awards = 6;
 * @return {!Array<!proto.pb.ZhaocaimiaoOpenInfo>}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.getAwardsList = function() {
  return /** @type{!Array<!proto.pb.ZhaocaimiaoOpenInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.ZhaocaimiaoOpenInfo, 6));
};


/** @param {!Array<!proto.pb.ZhaocaimiaoOpenInfo>} value */
proto.pb.ZhaocaimiaoOpenResp.prototype.setAwardsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.pb.ZhaocaimiaoOpenInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.ZhaocaimiaoOpenInfo}
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.addAwards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.pb.ZhaocaimiaoOpenInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.pb.ZhaocaimiaoOpenResp.prototype.clearAwardsList = function() {
  this.setAwardsList([]);
};


goog.object.extend(exports, proto.pb);
