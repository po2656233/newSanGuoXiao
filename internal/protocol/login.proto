// TODO message结构的属性名请使用 驼峰小写字母开始
// TODO enum枚举的属性名请使用 驼峰大写字母开始
syntax = "proto3";
option go_package = "/pb";
package pb;
// 登陆请求(建立连接后的第一条消息，验证通过后则进行后续流程)
message LoginRequest {
  int32              serverId = 1;   // 当前登陆的服务器id
  string             token = 2;      // 登陆token(web login api生成的base64字符串)
  map<int32, string> params = 3;     // 登陆时上传的参数 key: LoginParams
}
// 登陆响应
message LoginResponse {
  int64              uid = 1;      // 游戏内的用户唯一id
  int32              pid = 2;      // 平台id
  string             openId = 3;   // 平台openId(平台的帐号唯一id)
  map<int32, string> params = 4;   // 登陆后的扩展参数，按需增加
}
//次序说明(流程):
//1、个人信息登录
//2、招募武将
//3、选择武将
//4、匹配挑战对手
//5、生命值小的一方优先消除,相同则随机一方开始
//6、开始消除属性触发技能
//7、15秒轮流消除
//8、一方总生命值归零则游戏结束
//9、游戏结束,分配奖励
//10、退出游戏
//////////////////////////////enum////////////////////////////////////////////////////
//游戏类型
enum HeroType {
  HeroNull = 0;
  JIN = 1;        //金
  MU = 2;         //木
  SHUI = 3;       //水
  HUO = 4;        //火
  TU = 5;         //土
}
//桌子状态
enum TableState {
  InitTB = 0;     //初始化
  OpenTB = 1;     //开启
  RepairTB = 2;   //维修
  ClearTB = 3;    //清场(当前局结束后,清空所有场景信息)
  StopTB = 4;     //停运(再次启动时，以当前局的场景信息继续运作)
  CloseTB = 5;    //关闭
}
//游戏类型
enum GameType {
  General = 0;
  Fight = 1;          //对战类(两个或两个以上玩家同桌博弈，如三公、诈金花、牛牛)
  Multiperson = 2;    //百人类型
  TableCard = 3;      //房卡类型
  Guess = 4;          //竞猜类型
  GamesCity = 5;      //电玩城类型
  DualMeet = 6;       //电竞类型
  Sport = 7;          //体育类型
  Smart = 8;          //益智休闲
  RPG = 9;            //RPG类型
}
//游戏场景
enum GameScene {
  Free = 0;           //空闲
  Start = 1;          //开始
  Call = 2;           //叫分
  Decide = 3;         //定庄
  Playing = 4;        //游戏中
  Opening = 5;        //开奖
  Over = 6;           //结算
  Closing = 7;        //关闭
  SitDirect = 8;      //决定方位
  RollDice = 9;       //掷骰子
  WaitOperate = 10;   //等待操作
  ChangeThree = 11;   //换三张
  DingQue = 12;       //定缺门
  CheckTing = 13;     //查听
  CheckHuaZhu = 14;   //查花猪
}
/////////////基础信息//////////////////
//用户个人信息
message UserInfo{
  int64 userID = 1;      //ID
  string name = 2;        //用户
  string account = 3;     //帐号
  string password = 4;    //密码
  int32 faceID = 5;      //头像
  int32 gender = 6;      //性别
  int32 age = 7;         //年龄
  int32 vIP = 8;         //VIP级别
  int32 level = 9;       //级别
  int64  yuanBao = 10;      //元宝
  int64  coin = 11;      //铜钱
  int64  money = 12;      //金钱(余额)
  string passPortID = 13;   //证件号
  string realName = 14;     //真实名字
  string phoneNum = 15;     //手机
  string email = 16;        //邮箱
  string address = 17;      //住址
  string iDentity = 18;     //识别码(平台生成)
  int64 agentID = 19;        //代理标识(上级代理人)
  string referralCode = 20;   //推荐标识(推荐码,由邀请码生成)
  string clientAddr = 21;     //连接地址(当前实际IP)
  string serverAddr = 22;     //(跳转至该地址 由登录服务返回的真实服务器地址)
  string machineCode = 23;    //机器序列
}
// 武将信息
message HeroInfo {
  int64 iD = 1;
  int32 headId = 2;             // 头像ID
  string name = 3;              // 武将名称
  int32 sex = 4;                // 武将性别
  int32 rarity = 5;             // 稀有度
  HeroType faction = 6;         // 所属阵营
  int64 healthPoint = 7;        // 当前生命值
  int64 healthPointFull = 8;    // 满血值
  int64 strength = 9;           // 力量
  int64 agility = 10;           // 敏捷
  int64 intelligence = 11;      // 智力
  int64 attackPoint = 12;       // 攻击力
  int64 armorPoint = 13;        // 防御力
  int64 spellPower = 14;        // 法强
  repeated int64 skills = 15;   // 所包含的技能
}
// 武器信息
message WeaponInfo{
  int64 iD = 1;    //标识
  string name = 2;  //名称
  int32 type = 3;   //种类
  int32 level = 4;  //级别
  int64 damage = 5; //伤害值
  int64 prob = 6;   //掉落几率
  int32 count = 7;  //总数 -1:表示数量无限制
}
// 商品信息
message GoodsInfo{
  int64 iD = 1;    //标识
  string name = 2;  //名称
  int32 kind = 3;   //种类
  int32 level = 4;  //级别
  int64 price = 5;  //价格
  int64 store = 6;  //库存
  int64 sold = 7;   //已售 (玩家单次购得的数量)
  int32 amount = 8; //总数 (玩家已购得的总数量)
}
//商品列表
message GoodsList{
  repeated GoodsInfo allGoods = 1;//奖励商品列表
}
// 背包信息(单个)
message KnapsackInfo{
  int64 iD = 1;    //标识
  string name = 2;  //名称
  repeated WeaponInfo myWeaponry = 3;//单页最多二十
  repeated GoodsInfo myGoods = 4; //商品[房卡]
  repeated HeroInfo myHeroList = 5;   //我的武将列表
  int32 number = 6;    //编码 (页码)
}
//邮箱信息
message EmailInfo {
  int64 emailID = 1; //邮箱ID
  string acceptName = 2; //接收者
  string sender = 3;//发送者
  string cc = 4;//抄送给
  string topic = 5;//主题
  string content = 6;//内容 300字(最多)
  bool  isRead = 7;
  GoodsList awardList = 8;//奖励商品列表
  int64 timeStamp = 9; //时间戳
}
//桌子信息
message TableInfo{
  int64 hostID = 1;       //房主ID
  string name = 2;         //桌子名称：如李寻欢 李诚等
  string password = 3;     //桌子密钥
  TableState state = 4;    //桌子状态
  int32 enterScore = 5;   //进 场 分
  int32 lessScore = 6;    //坐 下 分
  int64  playScore = 7;    //携带积分
  int32 commission = 8;   //税收（百分比数，即为1==1%）
  int32 maxChair = 9;     //最大座位数 (=0时,默认不受限)
  int32 amount = 10;      //总 局 数  (=0时,默认不受限)
  int32 maxOnline = 11;   //在线人数
  int32 robotCount = 12;   //机器人数量
}
//游戏信息
message GameInfo{
  GameType type = 1;      //游戏类型
  int32 kindID = 2;      //游戏种类标识
  int32 level = 3;       //游戏类别 0:普通 1:中级 2:高级 3:积分排位 4:淘汰制排位
  GameScene scene = 4;    //游戏场景
  string name = 5;        //游戏名称：如高级麻将房 四川麻将 广东麻将 跑胡子等等
}
/////////////////item/////////////////////////////////
//任务项
message TaskItem{
  int32 iD = 1;
  int32 twice = 2;     //实现次数
  string hints = 3;     //提示语 “恭喜 祝贺”之类
}
//分类项
message ClassItem{
  int64 iD = 1;        //标识[必要项]
  string name = 2;      //分类名称
  string key = 3;       //分类密钥(自定义分类可用)
}
//子游戏
message GameItem{
  int64 iD = 1;       //游戏ID
  GameInfo info = 2;    //游戏信息
}
//桌子
message TableItem{
  int32 num = 1;        //序号 (界面排序参考项:非必要)
  int64 gameID = 2;     //游戏ID
  TableInfo info = 3;    //桌子信息
}
/////////////list//////////////////////////////////
//任务列表
message TaskList{
  repeated TaskItem task = 1;
}
//分类列表
message ClassList{
  repeated ClassItem classify = 1;
}
//游戏列表
message GameList{
  repeated GameItem items = 1;
}
//桌子列表
message TableList{
  repeated TableItem items = 1;
}
///////////////////////////////////////////////////////////
//主页信息
message MasterInfo{
  UserInfo userInfo = 1;          //用户信息
  ClassList classes = 2;          //分类列表
  TaskList tasks = 3;             //任务列表
}
/////////////[优秀如你]-->Req:请求 Resp:反馈<--[交互专用]///////////////////////////////////
/////////////[优秀如你]-->Req:请求 Resp:反馈<--[交互专用]///////////////////////////////////
/////////////[优秀如你]-->Req:请求 Resp:反馈<--[交互专用]///////////////////////////////////
//注册
message RegisterReq{
  string name = 1;            //用户
  string password = 2;        //密码
  string securityCode = 3;    //验证码
  string machineCode = 4;     //机器码
  string invitationCode = 5;  //邀请码
  int64 platformID = 6;      //需要注明平台ID (测试用: id == 1)
  //选填
  int32 gender = 7;       //性别
  int32 age = 8;          //年龄
  int32 faceID = 9;       //头像
  string passPortID = 10;  //证件号
  string realName = 11;    //真实名字
  string phoneNum = 12;    //手机
  string email = 13;       //邮箱
  string address = 14;     //住址
}
message RegisterResp{
//  UserInfo info = 1;
  int32  sdkId = 2;    // sdk id
  int32  pid = 3;      // 包id
  string openId = 4;   // sdk的openid 即uid
  int32  serverId = 5; // 所在游戏服id
  string ip = 6;       // 请求ip
}
//登录
message LoginReq{
  string account = 1;    //账号
  string password = 2;    //密码
  string securityCode = 3;  //验证码
  string machineCode = 4;  //机器码
  int64 platformID = 5; //需要注明平台ID (测试用: id == 1)
}
message LoginResp{
  MasterInfo mainInfo = 1;
  int64 inGameID = 2;     //所在游戏ID(=0时,不在任何游戏中)
  int64 inTableNum = 3;   //所在桌子ID(=0时,没有进桌)
  string token = 4;
}
//异地
message AllopatricResp{
  int64 userID = 1;
}
//重连
message ReconnectReq{
  string account = 1;       //账号
  string password = 2;      //密码
  string machineCode = 3;   //机器码
  int64 platformID = 4;    //需要注明平台ID (测试用: id == 1)
}
message ReconnectResp{
  MasterInfo mainInfo = 1;
  int64 inGameID = 2;     //所在游戏ID(=0时,不在任何游戏中)
  int64 inTableNum = 3;   //所在桌子ID(=0时,没有进桌)
  string token = 4;
}
/////////////////选择操作///////////////////////////////////
//选择分类
message ChooseClassReq{
  int32 iD = 1;             //分类编号
  string tableKey = 2;        //分类密钥
}
message ChooseClassResp{
  int32 iD = 1;             //分类编号
  GameList games = 2;         //游戏列表
  int32 pageNum = 3;         //分页码 默认20
}
//选择游戏
message ChooseGameReq{
  GameInfo info = 1;          //游戏(kindID level不可缺省)
  int32 pageNum = 2;         //请求页数
}
message ChooseGameResp{
  GameInfo info = 1;
  int32 pageNum = 2;         //分页码 默认 每页20条
  TableList tables = 3;       //牌桌列表
}
//配置游戏(房卡模式)
message SettingTableReq {
  GameInfo gInfo = 1;         //游戏信息
  TableInfo tInfo = 2;        //桌子信息
}
message SettingTableResp {
  TableItem item = 1;
}
//////////////////////签到///////////////////////////////////////////
//签到
message CheckInReq{
  int64 userID = 1;
  string remark = 2;//备注
}
message CheckInResp{
  int64 userID = 1;
  string remark = 2;//备注
  int64 timestamp = 3;//签到时间戳
  GoodsList awardList = 4;//签到奖励
}
//获取签到
message GetCheckInReq{
}
message GetCheckInResp{
  int64 userID = 1;
  repeated CheckInResp allCheckin = 2;//所有签到次数
  int32 pageNum = 3;//页码 默认20条一页
}
//////////////////////武将/////////////////////////////////////////
// [招募]抽取武将
message DrawHeroReq{
  int32 amount = 1;//抽取的数量
}
message DrawHeroResp{
  int64 userID = 1;
  repeated HeroInfo heroList = 2;//根据数量返回武将
}
// [布阵]获取我的英雄(武将)
message GetMyHeroReq{
}
message GetMyHeroResp{
  int64 userID = 1;
  repeated HeroInfo heroList = 2;//我的武将列表
}
// [选将]或[更换]选择携带的武将
message ChooseHeroReq{
  int32 position = 1;//武将的位置
  int64 heroID = 2;
}
message ChooseHeroResp{
  int32 position = 1;//武将的位置
  HeroInfo hero = 2;//已选的英雄列表
}
// [下阵]选择携带的武将
message DownHeroReq{
  int32 position = 1;//武将的位置
  int64 heroID = 2;
}
message DownHeroReqResp{
  int32 position = 1;//武将的位置
  int64 heroID = 2;
}
//获取全部英雄(武将)
message GetAllHeroReq{
}
message GetAllHeroResp{
  repeated HeroInfo heroList = 1;// 全部英雄列表
}
// 查找英雄
message CheckHeroReq{
  repeated int32 heroIDs = 1; // 根据ID列表查询
  string  name = 2; // 根据ID名称查询
  int32  sex = 3;   // 根据性别查询
  string  country = 4; // 根据国家查询
  HeroType faction = 5;// 根据阵营查询
}
message CheckHeroResp{
  repeated HeroInfo heroList = 1;
}
//////////////////////充值///////////////////////////////////////////
//充值
message RechargeReq {
  int64 userID = 1;
  int64 byiD = 2;
  int64 payment = 3;   // 金钱 (客户端统一 */100)
  int32 method = 4;    // 充值方式
  int32 switch = 5;    // 0:(余额)不转换 1:转元宝 2:转铜钱
  string reason = 6;   // 备注详情
}
message RechargeResp {
  int64  userID = 1;
  int64  byiD = 2;
  int64  preMoney = 3;  // 充值前的金钱 (客户端统一 */100)
  int64  payment = 4;   // 充值金额(客户端统一 */100)
  int64  money = 5;     // 当前金额(客户端统一 */100)
  int64  yuanBao = 6;   // 当前金额(客户端统一 */100)
  int64  coin = 7;      // 当前金额(客户端统一 */100)
  int32  method = 8;    // 充值方式
  bool   isSuccess = 9; //
  string order = 10;     //
  int64  timeStamp = 11; //
  string reason = 12;   // 备注详情
}
//获取充值纪录
message GetRechargesReq {
}
message GetRechargesResp {
  int64 userID = 1;
  repeated RechargeResp allRecharges = 2;
  int32 pageNum = 3;//页码 默认20条一页
}
/////////////////物品/////////////////////////
//获取商品信息
message GetGoodsReq {
  int64 iD = 1;        //标识 =0时 无效
}
message GetGoodsResp {
  int64 userID = 1;
  GoodsInfo info = 2;
}
//获取所有商品信息
message GetAllGoodsReq {
}
message GetAllGoodsResp {
  int64 userID = 1;
  repeated GoodsInfo info = 2;
  int32 pageNum = 3;//页码 默认20条一页
}
//购买商品
message BuyGoodsReq {
  int64 iD = 1;         //标识
  int64 payment = 2;    //付款 (客户端统一 */100)
  int64 count = 3;      // 玩家单次购得的数量)
}
message BuyGoodsResp {
  int64 userID = 1;
  GoodsInfo info = 2;
}
//查看背包
message CheckKnapsackReq {
  int64 iD = 1;    //背包标识
  int32 number = 2;    //编码 (页码) 0时表示获取全部
}
message CheckKnapsackResp {
  int64 userID = 1;
  KnapsackInfo info = 2;
}
//物品转换 仅支持通用房卡和超级房卡的转换,游戏房卡之间不能置换
message BarterReq{
  int64 iD = 1;         // 物品ID
  int64 toID = 2;       // 目标商品ID
  int32 amount = 3;      // 置换的个数
}
message BarterResp{
  int64 userID = 1;
  KnapsackInfo info = 2; //返回最新包裹信息
}
//转至商城
message ToShoppingResp{
  int64  iD = 1;         // 物品ID
  int32  count = 2;      // 个数
  string reason = 3;     // 转至商城的原因(提示)
}
//////////////////邮箱建议////////////////////////////////////
//邮箱信息
message EmailReq {
  int32 pageNum = 1;//页码 默认5条一页;
}
message EmailResp {
  int64 userID = 1;  //玩家ID
  repeated EmailInfo infos = 2;//页码 默认5条一页
  int32 pageNum = 3;//页码 默认5条一页
}
//领取奖励
message ClaimReq {
  int64 emailID = 1;//邮箱ID
}
message ClaimResp {
  int64 userID = 1;   //玩家ID
  int64 emailID = 2;   //邮箱ID
}
//建议
message SuggestReq {
  string content = 1;//内容 200字
}
message SuggestResp {
  int64 userID = 1;   //玩家ID
  EmailInfo feedback = 2;//反馈
}
//读取邮件
message EmailReadReq {
  int64 emailID = 1;//邮箱ID
}
message EmailReadResp {
  int64 userID = 1;   //玩家ID
  int64 emailID = 2;   //邮箱ID
}
//删除邮件
message EmailDelReq {
  int64 emailID = 1;//邮箱ID
}
message EmailDelResp {
  int64 userID = 1;   //玩家ID
  int64 emailID = 2;   //邮箱ID
}
//////////////result////////////////////////////////////
//结果反馈
message ResultResp{
  int32 state = 1;      //状态:0成功 1失败
  string hints = 2;      //提示信息
}
//结果反馈(弹窗)
message ResultPopResp{
  int32 flag = 1;      //状态:0成功 1失败
  string title = 2;      //标题
  string hints = 3;      //提示信息
}
//////////////heart//////////////////////////////////////////
//心跳包 默认20秒 网关等待读取数据时长为35秒
message PingReq{
}
message PongResp{
}
